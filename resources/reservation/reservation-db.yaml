apiVersion: v1
kind: Service
metadata:
  name: reservation-db-svc
  namespace: ticketaka-reservation
  labels:
    type: db
spec:
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    type: db

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: reservation-db-initdb-config
  namespace: ticketaka-reservation
data:
  init.sql: >
    CREATE TABLE `reservation` (`reservation_id` bigint NOT NULL AUTO_INCREMENT,`member_id` bigint DEFAULT NULL,`performance_id` varchar(255) DEFAULT NULL, `performance_title` varchar(255) DEFAULT NULL, `reservation_create_at` datetime DEFAULT NULL, `reservation_date` date DEFAULT NULL, `reservation_deleted` varchar(255) DEFAULT NULL, `reservation_poster` text, `reservation_price` int DEFAULT NULL, `reservation_ticket_count` int DEFAULT NULL, `reservation_time` varchar(255) DEFAULT NULL, PRIMARY KEY (`reservation_id`), KEY `idx__member_id` (`member_id`));    
    CREATE TABLE `deletereservation` (`reservation_id` int NOT NULL AUTO_INCREMENT,`member_id` int NOT NULL,`performance_id` char(8) NOT NULL,`performance_title` varchar(255) DEFAULT NULL,`reservation_ticket_count` int NOT NULL,`reservation_date` date NOT NULL,`reservation_time` char(5) NOT NULL,`reservation_price` int NOT NULL,`reservation_poster` text NOT NULL,`reservation_deleted` char(1) NOT NULL,`reservation_create_at` datetime NOT NULL,`deleted_date_time` datetime NOT NULL,PRIMARY KEY (`reservation_id`));
    CREATE VIEW unit_reservation AS SELECT reservation_id, member_id, performance_id, performance_title, reservation_create_at, reservation_date, reservation_deleted,reservation_poster,reservation_price,reservation_ticket_count,reservation_time from reservation union SELECT reservation_id, member_id, performance_id, performance_title, reservation_create_at, reservation_date, reservation_deleted,reservation_poster,reservation_price,reservation_ticket_count,reservation_time from deletereservation;
---
apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: reservation-db-sec
  namespace: ticketaka-reservation
data:
  MARIADB_ROOT_PASSWORD: cGFzczEyMyM=
  MARIADB_DATABASE: dGlja2V0YWth
  MARIADB_USER: dXNlcg==
  MARIADB_PASSWORD: dXNlcg==
  MYSQL_TCP_PORT: MzMwNg==

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    type: db
  name: reservation-db
  namespace: ticketaka-reservation
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      type: db
  template:
    annotations:
      sidecar.istio.io/inject: "false"
    metadata:
      labels:
        type: db
    spec:
      containers:
        - image: mariadb:10.7.8-focal
          name: reservation-db
          args:
            - --character-set-server=utf8
            - --collation-server=utf8_general_ci
            - --explicit_defaults_for_timestamp=1
          envFrom:
          - secretRef:
              name: reservation-db-sec
          env:
            - name: MARIADB_ROOT_HOST
              value: "%"
          ports:
            - containerPort: 3306
              name: reservation-db
          volumeMounts:
            - name: tz-seoul
              mountPath: /etc/localtime

            - name: rsv-db-storage
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: tz-seoul
          hostPath:
            path: /usr/share/zoneinfo/Asia/Seoul
        - name: rsv-db-storage
          configMap:
            name: reservation-db-initdb-config
